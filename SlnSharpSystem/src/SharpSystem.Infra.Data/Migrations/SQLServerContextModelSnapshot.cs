// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharpSystem.Infra.Data.Context;

#nullable disable

namespace SharpSystem.Infra.Data.Migrations
{
    [DbContext(typeof(SQLServerContext))]
    partial class SQLServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.Itens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NotaFiscalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotaFiscalId");

                    b.ToTable("Itens");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.Lista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AliquotaItemListaServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoItemListaServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoLocalPrestacaoServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descritivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItensId")
                        .HasColumnType("int");

                    b.Property<string>("SituacaoTributaria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TributaMunicipioPrestador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorTributavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItensId");

                    b.ToTable("Listas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AliquotaItemListaServico = "0",
                            CodigoItemListaServico = "94",
                            CodigoLocalPrestacaoServico = "12",
                            Descritivo = "teste bla bla",
                            SituacaoTributaria = "0",
                            TributaMunicipioPrestador = "10",
                            ValorTributavel = "0"
                        });
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.NotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PrestadorId")
                        .HasColumnType("int");

                    b.Property<int>("TomadorId")
                        .HasColumnType("int");

                    b.Property<string>("ValorTotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrestadorId");

                    b.HasIndex("TomadorId");

                    b.ToTable("NotasFiscais");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PrestadorId = 1,
                            TomadorId = 1,
                            ValorTotal = "150,00"
                        });
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.Prestador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prestadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "Blumenau",
                            CpfCnpj = "115.187.919-10"
                        });
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.Tomador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeRazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tomadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bairro = "Agua Verde",
                            Cep = "89062712",
                            Cidade = "Blumenau",
                            CpfCnpj = "12.345.678/0001-00",
                            Email = "teste@gmail.com",
                            Logradouro = "Oscar Wippel",
                            NomeRazaoSocial = "Empresa teste",
                            NumeroResidencia = "123",
                            Tipo = "1"
                        });
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.Usuario.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CFPCNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CFPCNPJ = "104.752.299-23",
                            Email = "pedrogodri@gmail.com",
                            Login = "PedroGodri",
                            Nome = "Pedro Godri",
                            Senha = "12345"
                        });
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.Itens", b =>
                {
                    b.HasOne("SharpSystem.Domain.Entities.NF.NotaFiscal", null)
                        .WithMany("Lista")
                        .HasForeignKey("NotaFiscalId");
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.Lista", b =>
                {
                    b.HasOne("SharpSystem.Domain.Entities.NF.Itens", null)
                        .WithMany("Lista")
                        .HasForeignKey("ItensId");
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.NotaFiscal", b =>
                {
                    b.HasOne("SharpSystem.Domain.Entities.NF.Prestador", "Prestador")
                        .WithMany()
                        .HasForeignKey("PrestadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharpSystem.Domain.Entities.NF.Tomador", "Tomador")
                        .WithMany()
                        .HasForeignKey("TomadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prestador");

                    b.Navigation("Tomador");
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.Itens", b =>
                {
                    b.Navigation("Lista");
                });

            modelBuilder.Entity("SharpSystem.Domain.Entities.NF.NotaFiscal", b =>
                {
                    b.Navigation("Lista");
                });
#pragma warning restore 612, 618
        }
    }
}
